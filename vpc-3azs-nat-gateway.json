{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "A VPC with public and private subnets across 3 availability zones",
	"Parameters": {
		"ClassB": {
			"Description": "Class B of VPC (10.XXX.0.0/16)",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "3"
		}
	},
	"Resources": {
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {"Fn::Join": ["", ["10.", {"Ref": "ClassB"}, ".0.0/16"]]},
				"EnableDnsSupport": true,
				"EnableDnsHostnames": true,
				"InstanceTenancy": "default",
				"Tags": [{
					"Key": "Name",
					"Value": {"Fn::Join": ["", ["10.", {"Ref": "ClassB"}, ".0.0/16"]]}
				}]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "Name",
					"Value": {"Fn::Join": ["", ["10.", {"Ref": "ClassB"}, ".0.0/16"]]}
				}]
			}
		},
		"VPCGatewayAttachment": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {"Ref": "VPC"},
				"InternetGatewayId": {"Ref": "InternetGateway"}
			}
		},
		"SubnetAPublic": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {"Fn::Select": ["0", {"Fn::GetAZs": ""}]},
				"CidrBlock": {"Fn::Join": ["", ["10.", {"Ref": "ClassB"}, ".0.0/20"]]},
				"MapPublicIpOnLaunch": true,
				"VpcId": {"Ref": "VPC"},
				"Tags": [{
					"Key": "Name",
					"Value": "A public"
				}, {
					"Key": "Reach",
					"Value": "public"
				}]
			}
		},
		"SubnetAPrivate": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {"Fn::Select": ["0", {"Fn::GetAZs": ""}]},
				"CidrBlock": {"Fn::Join": ["", ["10.", {"Ref": "ClassB"}, ".16.0/20"]]},
				"VpcId": {"Ref": "VPC"},
				"Tags": [{
					"Key": "Name",
					"Value": "A private"
				}, {
					"Key": "Reach",
					"Value": "private"
				}]
			}
		},
		"SubnetBPublic": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {"Fn::Select": ["1", {"Fn::GetAZs": ""}]},
				"CidrBlock": {"Fn::Join": ["", ["10.", {"Ref": "ClassB"}, ".32.0/20"]]},
				"MapPublicIpOnLaunch": true,
				"VpcId": {"Ref": "VPC"},
				"Tags": [{
					"Key": "Name",
					"Value": "B public"
				}, {
					"Key": "Reach",
					"Value": "public"
				}]
			}
		},
		"SubnetBPrivate": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {"Fn::Select": ["1", {"Fn::GetAZs": ""}]},
				"CidrBlock": {"Fn::Join": ["", ["10.", {"Ref": "ClassB"}, ".48.0/20"]]},
				"VpcId": {"Ref": "VPC"},
				"Tags": [{
					"Key": "Name",
					"Value": "B private"
				}, {
					"Key": "Reach",
					"Value": "private"
				}]
			}
		},
		"SubnetCPublic": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {"Fn::Select": ["2", {"Fn::GetAZs": ""}]},
				"CidrBlock": {"Fn::Join": ["", ["10.", {"Ref": "ClassB"}, ".64.0/20"]]},
				"MapPublicIpOnLaunch": true,
				"VpcId": {"Ref": "VPC"},
				"Tags": [{
					"Key": "Name",
					"Value": "C public"
				}, {
					"Key": "Reach",
					"Value": "public"
				}]
			}
		},
		"SubnetCPrivate": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {"Fn::Select": ["2", {"Fn::GetAZs": ""}]},
				"CidrBlock": {"Fn::Join": ["", ["10.", {"Ref": "ClassB"}, ".80.0/20"]]},
				"VpcId": {"Ref": "VPC"},
				"Tags": [{
					"Key": "Name",
					"Value": "C private"
				}, {
					"Key": "Reach",
					"Value": "private"
				}]
			}
		},
		"RouteTablePublic": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {"Ref": "VPC"},
				"Tags": [{
					"Key": "Name",
					"Value": "Public"
				}]
			}
		},
		"RouteTablePrivateA": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {"Ref": "VPC"},
				"Tags": [{
					"Key": "Name",
					"Value": "Private"
				}]
			}
		},
    "RouteTablePrivateB": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {"Ref": "VPC"},
				"Tags": [{
					"Key": "Name",
					"Value": "Private"
				}]
			}
		},
    "RouteTablePrivateC": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {"Ref": "VPC"},
				"Tags": [{
					"Key": "Name",
					"Value": "Private"
				}]
			}
		},
		"RouteTableAssociationAPublic": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref": "SubnetAPublic"},
				"RouteTableId": {"Ref": "RouteTablePublic"}
			}
		},
		"RouteTableAssociationAPrivate": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref": "SubnetAPrivate"},
				"RouteTableId": {"Ref": "RouteTablePrivateA"}
			}
		},
		"RouteTableAssociationBPublic": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref": "SubnetBPublic"},
				"RouteTableId": {"Ref": "RouteTablePublic"}
			}
		},
		"RouteTableAssociationBPrivate": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref": "SubnetBPrivate"},
				"RouteTableId": {"Ref": "RouteTablePrivateB"}
			}
		},
		"RouteTableAssociationCPublic": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref": "SubnetCPublic"},
				"RouteTableId": {"Ref": "RouteTablePublic"}
			}
		},
		"RouteTableAssociationCPrivate": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref": "SubnetCPrivate"},
				"RouteTableId": {"Ref": "RouteTablePrivateC"}
			}
		},
		"RouteTablePublicInternetRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "VPCGatewayAttachment",
			"Properties": {
				"RouteTableId": {"Ref": "RouteTablePublic"},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {"Ref": "InternetGateway"}
			}
		},
		"NetworkAclPublic": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {"Ref": "VPC"},
				"Tags": [{
					"Key": "Name",
					"Value": "Public"
				}]
			}
		},
		"NetworkAclPrivate": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {"Ref": "VPC"},
				"Tags": [{
					"Key": "Name",
					"Value": "Private"
				}]
			}
		},
		"SubnetNetworkAclAssociationAPublic": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {"Ref": "SubnetAPublic"},
				"NetworkAclId": {"Ref": "NetworkAclPublic"}
			}
		},
		"SubnetNetworkAclAssociationAPrivate": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {"Ref": "SubnetAPrivate"},
				"NetworkAclId": {"Ref": "NetworkAclPrivate"}
			}
		},
		"SubnetNetworkAclAssociationBPublic": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {"Ref": "SubnetBPublic"},
				"NetworkAclId": {"Ref": "NetworkAclPublic"}
			}
		},
		"SubnetNetworkAclAssociationBPrivate": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {"Ref": "SubnetBPrivate"},
				"NetworkAclId": {"Ref": "NetworkAclPrivate"}
			}
		},
		"SubnetNetworkAclAssociationCPublic": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {"Ref": "SubnetCPublic"},
				"NetworkAclId": {"Ref": "NetworkAclPublic"}
			}
		},
		"SubnetNetworkAclAssociationCPrivate": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {"Ref": "SubnetCPrivate"},
				"NetworkAclId": {"Ref": "NetworkAclPrivate"}
			}
		},
		"NetworkAclEntryInPublicAllowAll": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {"Ref": "NetworkAclPublic"},
				"RuleNumber": "99",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0"
			}
		},
		"NetworkAclEntryOutPublicAllowAll": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {"Ref": "NetworkAclPublic"},
				"RuleNumber": "99",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0"
			}
		},
		"NetworkAclEntryInPrivateAllowVPC": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {"Ref": "NetworkAclPrivate"},
				"RuleNumber": "99",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0"
			}
		},
		"NetworkAclEntryOutPrivateAllowVPC": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {"Ref": "NetworkAclPrivate"},
				"RuleNumber": "99",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0"
			}
		},
		"EIPA": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"NatGatewayA": {
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {"Fn::GetAtt": ["EIPA", "AllocationId"]},
				"SubnetId": {"Ref": "SubnetAPublic"}
			}
		},
		"RouteA": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {"Ref": "RouteTablePrivateA"},
				"DestinationCidrBlock": "0.0.0.0/0",
				"NatGatewayId": {"Ref": "NatGatewayA"}
			}
		},
		"EIPB": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"NatGatewayB": {
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {"Fn::GetAtt": ["EIPB", "AllocationId"]},
				"SubnetId": {"Ref": "SubnetBPublic"}
			}
		},
		"RouteB": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {"Ref": "RouteTablePrivateB"},
				"DestinationCidrBlock": "0.0.0.0/0",
				"NatGatewayId": {"Ref": "NatGatewayB"}
			}
		},
		"EIPC": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"NatGatewayC": {
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {"Fn::GetAtt": ["EIPC", "AllocationId"]},
				"SubnetId": {"Ref": "SubnetCPublic"}
			}
		},
		"RouteC": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {"Ref": "RouteTablePrivateC"},
				"DestinationCidrBlock": "0.0.0.0/0",
				"NatGatewayId": {"Ref": "NatGatewayC"}
			}
		}
	},
	"Outputs": {
		"VPC": {
			"Description": "VPC.",
			"Value": {"Ref": "VPC"}
		},
		"SubnetAPublic": {
			"Description": "Subnet A public.",
			"Value": {"Ref": "SubnetAPublic"}
		},
		"SubnetAPrivate": {
			"Description": "Subnet A private.",
			"Value": {"Ref": "SubnetAPrivate"}
		},
		"SubnetBPublic": {
			"Description": "Subnet B public.",
			"Value": {"Ref": "SubnetBPublic"}
		},
		"SubnetBPrivate": {
			"Description": "Subnet B private.",
			"Value": {"Ref": "SubnetBPrivate"}
		},
		"SubnetCPublic": {
			"Description": "Subnet C public.",
			"Value": {"Ref": "SubnetCPublic"}
		},
		"SubnetCPrivate": {
			"Description": "Subnet C private.",
			"Value": {"Ref": "SubnetCPrivate"}
		}
	}
}
